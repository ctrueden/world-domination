Save & load game state to disk
 - use XStream: http://xstream.codehaus.org/ - either JSON or XML

game runs in a single JVM as a server
clients transmit commands to the server via sockets over localhost
game state is abstracted from client rendering
so we can have e.g. a BBS/Door client, and a web client
think about this more, and look for useful tools to help
 - maybe server should simply support multiple output protocols
 - learn about AJAX to evaluate how web client's output protocol would work
 - other possible clients: applet, instant messaging, IRC, CLI

GameServer
 - manages ClientConnections with clients
 - protocol used is abstracted from server
 - SocketProtocol is the initial one i'll implement
 - but maybe we'll add XML-RPC protocol, etc., later

DataProtocol
 - interface for communication using a particular protocol
 - methods:
  + void send(String)
  + char receive()

ClientConnection
 - represents connection to a specific client
 - calls protocol.receive() whenever a character is received
 - server calls protocol.send(String) as appropriate
  + often in response to user input from receive
  + but sometimes in response to other client's actions
  + sometimes in response to time elapsing as well (e.g., connection timeout)

Character
 - base class holding details common to PCs and NPCs
 - instance of this class represents a PC or NPC
 - PCs are controlled by a player, of course
 - NPCs can be townsfolk, vassals, lords, monsters, ...
  + some modules have NPCs associated with them; e.g.:
   * the tavern has a bartender
   * every town has an old man
   * captain of the guard
   * governor of the province
   * many more
 - fields:
  + player - name of the character's player, or null for an NPC - string
  + name - name of the character - string
  + race - enum
  + gender - enum
  + age - integer
  + class - enum
   * can be one of the normally accessible PC classes,
   * or a monster class,
   * or a special class
  + level - integer
  + stats (level & class driven) - integers
   * strength
   * vitality
   * speed
   * stealth
   * skill
   * magic
   * faith
   * luck
   * charm
   * leadership (?)
   * current/max HP/MP/etc.
  + stats (action & situation driven) - integers
   * honor
   * fame
   * renown
  + current location - Province
  + gear/items - list of Items?
  + equipment
   * weapon - Item
   * armor - Item
   * shield - Item
   * accessory - Item
   * etc. - more Items
  + spells - list of Spells known?
  + lord - Character to whom this character currently owes allegiance, if any
   * could be a PC or an NPC
   * e.g., if you sell your soul to Satan, it will be Satan (an NPC)
  + provincesGoverned - list of Provinces this character governs
  + provincesOwned - list of Provinces the character owns
  + 
 - methods to manipulate these fields
 - derived stats are not fields, but have methods that compute from the fields
  + attack - based on strength & weaponry
  + defense - based on vitality & armor
  + hit%, crit% - based on skill & luck (3 attack results: miss, hit & crit)
  + evade% - based on speed, stealth & luck

Province
 - class holding details about provinces
 - instance of class represents a particular province
 - fields:
  + name - string
  + modules - list of Modules
  + owner - Character, or null if no one controls it
  + governor - Character, or null if no one governs

World
 - class holding details about the geographical configuration of the world
 - fields:
  + provinces - list of Provinces
  + TODO finish listing these

Game
 - has pointers to the entire game state (the World, all Characters, etc.)
 - serialized to/from disk with XStream as XML

Module
 - base class for describing a particular piece of the game
 - subclass describes a particular module, such as one of the world wonders
 - some modules need the flexibility to input and output whatever they want,
   whenever they want
  + many leaf modules
  + combat module
 - base module design is such that the "active" module for a particular client
   indicates which piece of the game is currently handling their I/O
 - game server just passes I/O through the active module
 - methods:
  - input()
  - output()
 - modules can reference other modules
 - the game starts out pointing at the Login module

Menu
 - extends Module
 - many areas have a very similar pattern: a description followed
   by a series of menu choices; MenuModule class encompasses those
 - fields:
  + name - string
  + description - overview printed when you first select the module
  + modules - list of sub modules accessible from this one

Place
 - extends Menu
 - all places have a few things in common
  + there is a proprietor
   - can talk to them
   - can see their stats (maybe only some classes)
   - can challenge them to a duel
   - can capture them alive (by winning the duel?)
 - (D)irty tactics
  + (A)ttack proprietor
  + (B)urn the place down -- or "(T)orch the place" if pyrokineticist
  + (M)urder proprietor in his/her sleep
  + (P)ick pockets
  + (R)ob patrons (tavern) -- or "(R)ob the store" if shop
   - "Ski mask" item helps avoid becoming wanted for this
  + (S)educe the proprietor
  + (I)ncite a bar brawl -- tavern only
 - list of buildings:
  + Tavern
   - Talk to bartender
   - Bards can perform
   - Talk to bar maids
   - Listen to rumors (i.e., read daily events)
  + Old Man's house
   - Talk to old man
   - Kill old man
   - See province stats? (including some stats palace doesn't even know)
  + Royal Palace
   - Attack a neighboring province
   - Hire or release soldiers
   - Sabotage another province
   - Spy on another province
   - Build structures
   - "Give food" -- raise morale
   - Court vizier?
   - Barracks -- where army stays?
  + Wonder of the World
  + Pawn shop
   - Talk to proprietor
   - Kill proprietor
   - Sell stolen goods
  + Blacksmith
   - sells weapons, armor, shields, helms...
   - crafts custom weapons and armor?
  + General store
   - sells non-magical items & accessories
  + Magic boutique
   - sells spells, potions, charms, magical accessories
  + Brothel
  + Guildhall(s)
   - where elite adventurers gather to provide services to one another
   - assassin's guild
   - bounty house
    + receive money for having slain mighty beasts
    + recieve money for having captured a character
     - start with random bounties on various NPCs, to give people things to do
   - temple of the mind
    + send psionic message to another player
   - mercenary guild
    + hire elite troops
    + hire squad leaders?
   - other guilds?
  + Church
  + Bank
   - Deposit funds
   - Withdraw funds
   - Rob bank
 - other actions:
  + Pity foo
  + View your stats
  + See world map
  + Travel to another province

FieldUnitType
 - class for describing a particular unit type of an army
 - one instance per field unit type
 - fields:
  + name - string (e.g., 'footmen', 'pixies', 'trolls')
  + melee - integer
  + ranged - integer
  + max HP - integer
 - first round of combat, armies deal each other ranged damage
 - then armies close and deal melee on subsequent rounds
 - damage is divided by % according to number of each type of unit
 - consider heal type units
 - heroes do not take damage from enemy army until allied army is defeated
 - heroes damage enemy army based on their stats

FieldUnit
 - class for an actual group of field units (e.g., 530 Knights)
 - fields:
  + type - FieldUnitType
  + count - number of units in the squad - integer
  + cur HP - list of current HP values

FieldSquad
 - class for a squad of various field units (e.g., 50 Knights + 20 Pixies)
 - fields:
  + nickname - string (e.g., 'trollinators', 'doomsday squad')
  + units - list of FieldUnits

wonders of the world:
 - well of knowledge
 - fountain of youth
 - well of magic
 - well of faith
 - well of shadows
 - well of strength
 - well of rebirth
 - cave of the red dragon
  + can convince dragon to burn down another province
  + can defeat the dragon for fame and glory
 - the all-seeing oracle
 - cliffs of enlightenment
 - genie that grants one wish, from a set list:
  + "a province of my own"
  + "a legendary weapon"
  + "the demise of my enemies"
  + "a scrumptious parfait"
 - 15 more...

equipment slots:
 - l.hand -- weapon, wand or shield
 - r.hand -- weapon, wand or shield
 - torso -- armor, shirt or robe; + a cloak
 - head -- helmet, headband
 - neck -- necklace, amulet or periapt
 - legs -- pants
 - feet -- shoes, boots or grieves
 - hands -- gloves or gauntlets; + up to two rings
 - eyes -- goggles or lenses
 - ears -- muffs or earrings
 - nose -- nose ring
 - some items take multiple slots; e.g., masks take eyes & nose slots
Slots are not explicitly enumerated; just listed once you equip an item that
takes that slot. That way it's very easy to add additional slots later.

ANSI codes:
 - http://sunsite.nus.edu.sg/pub/os2/os2faq/os2faq.2.0062.html
 - http://pueblo.sourceforge.net/doc/manual/ansi_color_codes.html

ideas--
 - randomly append "Watch out for snakes!" to the end of description blurbs.
   + 1% chance, maybe? don't let refreshing the description have another
     chance though -- only once per day
    - when that happens you can hit 'w' to 'watch out for snakes' and you'll
      find a dune buggy, which you can drive around. reduces travel time
      between provinces significantly.
 - characters could have relationships to one another
  + fields for family members, creating family trees

questions--
 - How do you win a province?
  1) take the province by military force
   - destroy the standing army of the province
   - fight past the palace guard and captain of the guard
   - storm the palace
    + must fight: you & your army vs governor's elite guard & court vizier
      (see option #3 below)
    + but all loyalists have a chance of defecting or surrendering before
      the battle, depending on their honor, loyalty and perceived odds
    + anyone who surrenders before being killed is captured; options:
     - (R)ecruit
     - (I)mprison
     - r(A)nsom
     - (E)xile
     - e(X)ecute
  2) incite a revolution among the common people
   - but the revolution may be quashed, if it's not strong enough;
     figure out the details of this
   - if you choose to lead them into battle, you get a peasant squad
    + if you fight with them this way, they always install you as new owner
    + if not, they may appoint a new ruler other than you, depending on stats
   - they choose among all present named characters, based on a formula:
     highest (charm + reputation + prominence/2) of all present named chars
  3) personally eliminate all loyalists in the palace
   - get into the palace somehow:
    + sneak in with high stealth
    + or defeat city guard
    + or bribe captain of the guard
   - assassinate governor
    + but to do it, you must defeat his elite guard, and the court vizier
    + must fight entire elite guard at once
    + governor may have appointed any number of vassals into his elite guard
   - once all loyalists are gone (killed, defected or otherwise not present),
     you can install yourself as ruler
  4) convince the province's owner to become your vassal
 - How do you raise an army?
  1) draft civilians in a province you control
   - different provinces have different racial compositions,
     so what unit types you get in your army depends on which province
  2) hire mercenaries
  3) draw men to your cause due to your reputation
   - high fame (i.e., reputation + prominence) results in soldiers occasionally
     pledging themselves to you, just for the honor of doing so
  4) acquire troops from a defeated opponent somehow?
   - remnants of surrendering armies become your troops
  5) complete certain travel quests?
 - How does it work to have a wandering army? Is it even possible?
  + yes, but there are restrictions on where you can go with it
 - 

little questions--
 - Where do you meet Satan?
 - What is the downside of choosing a deadly sin and selling your soul?
